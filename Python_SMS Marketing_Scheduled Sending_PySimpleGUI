import openpyxl
import schedule
import time
from datetime import datetime, date, time as datetime_time
import requests
from urllib.parse import urlencode
import PySimpleGUI as sg

sg.theme('DarkTeal9')

layout = [
    [sg.Text('Scheduled SMS program is currently running.')],
    [sg.Exit()]
]

window = sg.Window('Scheduled SMS', layout)

window.SetIcon("image.ico")

apikey = '[insert_your_api_here]'
sendername = '[insert_sender_name_here]'

exit_flag = False

def send_sms_template(name, bill, receiver):
    
    sms_text = f"Hello, {name}! Your bill is {bill}."
    phone_number = receiver
    send_sms(sms_text, phone_number)
    time.sleep(1)

def send_sms(sms_text, phone_number):
    params = (
        ('apikey',apikey),
        ('sendername',sendername),
        ('message',sms_text),
        ('number',phone_number)
    )

    try:
        path = '[inser_api_url]?' + urlencode(params)
        requests.post(path)
        time.sleep(4)
    except Exception as e:
        global exit_flag
        exit_flag = True

def check_scheduled_sms():
    excel_file_path = "Scheduled_SMS.xlsx"
    current_date = date.today().strftime("%m/%d/%Y")
    current_time = datetime.now().time()
    print(current_time)

    if current_time >= datetime_time(7, 0) and current_time <= datetime_time(19, 0):
        try:
            workbook = openpyxl.load_workbook(excel_file_path)
            sheet = workbook['Data']

            for index, row in enumerate(sheet.iter_rows(min_row=2, values_only=True), start=2):
                scheduled_date = row[3]
                print(f"row {index}: {row}")

                if (current_date >= scheduled_date) and (row[4]=='Not Sent'):
                    name = row[0]
                    bill = row[1]
                    receiver = row[2]

                    try:
                        send_sms_template(name,bill,receiver)

                        sheet["E" + str(index)] = 'Sent'
                        sheet["F" + str(index)] = datetime.now()
                    except Exception as e:
                        global exit_flag
                        exit_flag = True

            workbook.save(excel_file_path)
        except Exception as e:
            exit_flag = True

schedule.every(1).minutes.do(check_scheduled_sms)

while not exit_flag:
    schedule.run_pending()
    time.sleep(1)

    event, values = window.read(timeout=1000)

    if event == sg.WIN_CLOSED or event == 'Exit':
        exit_flag = True

window.close()
