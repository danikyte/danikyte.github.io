# Use this service for server-side access_validity verification

import azure.functions as func
import logging
import datetime

app = func.FunctionApp(http_auth_level=func.AuthLevel.ANONYMOUS)

@app.route(route="access_validation")
def access_validation(req: func.HttpRequest) -> func.HttpResponse:
    logging.info('Python HTTP trigger function processed a request.')

    access_validity_str = req.params.get('access_validity')

    if access_validity_str:
        try: 
            access_validity = datetime.datetime.strptime(access_validity_str, '%Y-%m-%d').date()
            current_date = datetime.datetime.now().date()

            if current_date < access_validity:
                return func.HttpResponse(status_code=200) # Valid Access
            else:
                return func.HttpResponse(
                    status_code=403,
                    body="You do not have a valid access."
                ) # Invalid access
        except ValueError:
            return func.HttpResponse(
                status_code=400,
                body="Invalid access validity format."
            )
    else:
        return func.HttpResponse(
            status_code=400,
            body="Missing access validity parameter."
        )
